stages:          # List of stages for jobs, and their order of execution
#  - build
  - test
  - deploy

image: python:3.9-bookworm

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  SERVERLOGMONITORTEST: "true"
  SUCCESSFUL_UPLOADS: 5

before_script:
  - python --version ; pip --version  # For debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - pip install -r requierements.txt



#build-job:       # This job runs in the build stage, which runs first.
#  stage: build
#  artifacts:
#    name: "log-monitor-$CI_COMMIT_REF_NAME"
#    paths:
#      - "target/release/datacollectionserver"
#  script:
#    - echo "Compiling the code..."
#    - cargo build --release
#    - echo "Compile complete."

flake8-test:
  stage: test
  allow_failure: true
  before_script:
    - pip install flake8
  script:
    - echo **Flake8**
    - flake8 --version
    - flake8 --count

pytest-test:
  stage: test
  allow_failure: true
  before_script:
    - pip install pytest pytest-cov
  script:
    - echo **Pytest**
    - pytest -v --cov


parsing-test:
  stage: test
  before_script:
    - apt update && apt install -y netcat-openbsd
    - mv ./tests/test-journalctl.sh /usr/bin/journalctl
    - mv ./tests/test-config.yaml ./config.yml
    - chmod +x /usr/bin/journalctl
    - chmod +x ./tests/http-srv.py
    - chmod +x ./tests/verify.sh
    - pip install -r requirements.txt
  script:
    - bash -c "python3 -u ./tests/http-srv.py & (./log2discord.sh; echo Done;sleep 20)"
    - echo $0
    - ./tests/verify.sh

docker-build-push:
    image: docker:26
    stage: deploy
    variables:
        DOCKER_IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    before_script:
        - if [[ -v $CI_COMMIT_TAG ]]; then exit 0; fi
        - docker info
        - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    script:
        - echo Docker_image_name is $DOCKER_IMAGE_NAME
        - docker build --pull -t "$DOCKER_IMAGE_NAME" .
        - docker push "$DOCKER_IMAGE_NAME"
        - |
            if [[ true ]]; then
            docker tag "$DOCKER_IMAGE_NAME" "$CI_REGISTRY_IMAGE:latest"
            docker push "$CI_REGISTRY_IMAGE:latest"
            fi

#build-job:       # This job runs in the build stage, which runs first.
#  stage: build
#  script:
#    - echo "Compiling the code..."
#    - echo "Compile complete."

#unit-test-job:   # This job runs in the test stage.
#  stage: test    # It only starts when the job in the build stage completes successfully.
#  script:
#    - echo "Running unit tests... This will take about 60 seconds."
#    - sleep 60
#    - echo "Code coverage is 90%"

#lint-test-job:   # This job also runs in the test stage.
#  stage: test    # It can run at the same time as unit-test-job (in parallel).
#  script:
#    - echo "Linting code... This will take about 10 seconds."
#    - sleep 10
#    - echo "No lint issues found."

#deploy-job:      # This job runs in the deploy stage.
#  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
#  environment: production
#  script:
#    - echo "Deploying application..."
#    - echo "Application successfully deployed."
